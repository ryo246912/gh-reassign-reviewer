[tasks.go-build]
run = "go run ./cmd/gh-reassign-reviewer"

[tasks.test]
description = "Run all tests"
run         = "go test -v ./..."

[tasks.test-coverage]
description = "Run tests with coverage report"
run = [
    "go test -v -coverprofile=tmp/coverage.out -covermode=atomic ./...",
    "go tool cover -func=tmp/coverage.out",
    "go tool cover -html=tmp/coverage.out -o tmp/coverage.html",
]

[tasks.test-race]
description = "Run tests with race detector"
run         = "go test -v -race ./..."

[tasks.test-bench]
description = "Run benchmark tests"
run         = "go test -v -bench=. -benchmem ./..."

[tasks.test-verbose]
description = "Run tests with verbose output and detailed results"
run         = "go test -v -count=1 -failfast ./..."

[tasks.test-short]
description = "Run only fast tests (skip slow integration tests)"
run         = "go test -v -short ./..."

[tasks.extension-remote-install]
description = "install gh-reassign-reviewer extension"
run         = "gh extension install ryo246912/gh-reassign-reviewer"

[tasks.extension-local-install]
description = "install gh-reassign-reviewer extension(local)"
run = [
    "go build ./cmd/gh-reassign-reviewer",
    "gh extension install .",
]

[tasks.extension-build-install]
description = "Rebuild and install gh-reassign-reviewer extension"
run = [
    "gh extension remove gh-reassign-reviewer || true",
    "mise run extension-local-install",
]

[tasks.lint-actionlint]
description = "Run actionlint"
hide        = true
run         = "actionlint -ignore 'SC2016:'"

[tasks.lint-zizmor]
description = "Run zizmor"
hide        = true
run         = "zizmor --pedantic --gh-token=$(gh auth token) --min-severity=low .github/workflows"

[tasks.lint-ghalint]
description = "Run ghalint"
hide        = true
run         = "ghalint run"

[tasks.lint-action]
depends = [
    "lint-actionlint",
    "lint-ghalint",
    "lint-zizmor",
]
description = "Run all action linters"

[tasks.lint-golangci]
description = "Run golangci-lint"
run         = "golangci-lint run"

[tasks.lint-gomod]
alias       = "fix-gomod"
description = "go mod tidy"
run         = "go mod tidy"

[tasks.lint-go]
depends = [
    "lint-golangci",
    "lint-gomod",
]
description = "Run go linter"

[tasks.dev]
depends = [
    "test-coverage",
    "lint-go",
    "go-build",
]
description = "Development workflow: test + lint + build"

[tasks.lint-yaml]
description = "Run lint YAML files"
hide        = true
run         = "prettier --check '**/*.{yaml,yml}'"

[tasks.lint-toml]
description = "Run lint TOML files"
hide        = true
run         = "taplo format --check"

[tasks.lint-other]
depends = [
    "lint-toml",
    "lint-yaml",
]
description = "Run other linters"

[tasks.lint-all]
depends = [
    "lint-action",
    "lint-format",
    "lint-go",
]
description = "Run all linters"

[tasks.fix-yaml]
description = "Run fix YAML files"
hide        = true
run         = "prettier --write '**/*.{yaml,yml}'"

[tasks.fix-toml]
description = "Run fix TOML files"
hide        = true
run         = "taplo format"
[tasks.fix-action]
description = "Run fix actions files"
run         = ["pinact run", "disable-checkout-persist-credentials"]

[tasks.fix-other]
depends = [
    "fix-toml",
    "fix-yaml",
]
description = "Run other formatter"
[tasks.fix-golangci]
description = "Run fix golangci"
hide        = true
run         = "golangci-lint run --fix"
[tasks.fix-go]
depends = [
    "fix-golangci",
    "fix-gomod",
]
description = "Run go formatter"

[tools]
actionlint                     = "1.7.7"
"aqua:suzuki-shunsuke/ghalint" = "1.5.1"
golangci-lint                  = "2.1.6"
"npm:@taplo/cli"               = "0.7.0"
"npm:prettier"                 = "3.6.2"
"pipx:zizmor"                  = "1.9.0"
